spring.application.name=@project.artifactId@

spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql = false
spring.jpa.generate-ddl = false

spring.jpa.properties.hibernate.id.new_generator_mappings=true

logging.level.root = INFO
logging.level.org.hibernate.tool.hbm2ddl = WARN

# Error handling configuration - prevent stack trace exposure
server.error.include-stacktrace=never
server.error.include-message=on_param
server.error.include-binding-errors=on_param

spotify.accounts.uri=https://accounts.spotify.com
spotify.authorize.endpoint=${spotify.accounts.uri}/authorize
spotify.api.base.uri=https://api.spotify.com/v1

# AUTH0
auth0.issuer:https://crates.us.auth0.com/
auth0.apiAudience:https://crates.page

spotify.redirect-uri=${SPOTIFY_REDIRECT_URI}

#crates.auth.callback.uri=http://localhost:4311/auth/callback
crates.auth.callback.uri=${CRATES_AUTH_CALLBACK_URI}

spotify.client-id=${SPOTIFY_CLIENT_ID}
spotify.client-secret=${SPOTIFY_CLIENT_SECRET}

crates.encryption-key=${CRATES_ENCRYPTION_KEY}

# MCP Server Configuration (for Claude Desktop and ChatGPT)
crates.mcp.server.name=crates-ai-curator
crates.mcp.server.version=1.0.0
crates.mcp.server.description=AI-powered music crate curation system for Spotify libraries. Create themed crates, search albums, and share publicly.

# MCP Configuration
crates.mcp.base-url=${CRATES_MCP_BASE_URL:http://localhost:8980}
crates.mcp.redirect-uri=${CRATES_MCP_REDIRECT_URI:http://localhost:8980/mcp/auth/callback}